/*
 * generated by Xtext 2.21.0
 */
package wizard.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import wizard.ide.contentassist.antlr.internal.InternalWizardParser;
import wizard.services.WizardGrammarAccess;

public class WizardParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(WizardGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, WizardGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getBotonAccess().getAlternatives(), "rule__Boton__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getPaginaAccess().getAlternatives_1(), "rule__Pagina__Alternatives_1");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getWizardAccess().getGroup(), "rule__Wizard__Group__0");
			builder.put(grammarAccess.getPaginaAccess().getGroup(), "rule__Pagina__Group__0");
			builder.put(grammarAccess.getPaginaAccess().getGroup_1_0(), "rule__Pagina__Group_1_0__0");
			builder.put(grammarAccess.getPaginaAccess().getGroup_3(), "rule__Pagina__Group_3__0");
			builder.put(grammarAccess.getPaginaAccess().getGroup_3_0(), "rule__Pagina__Group_3_0__0");
			builder.put(grammarAccess.getPaginaAccess().getGroup_3_1(), "rule__Pagina__Group_3_1__0");
			builder.put(grammarAccess.getCampoAccess().getGroup(), "rule__Campo__Group__0");
			builder.put(grammarAccess.getCasillaAccess().getGroup(), "rule__Casilla__Group__0");
			builder.put(grammarAccess.getCasillaAccess().getGroup_5(), "rule__Casilla__Group_5__0");
			builder.put(grammarAccess.getNavegarAccess().getGroup(), "rule__Navegar__Group__0");
			builder.put(grammarAccess.getNavegarAccess().getGroup_4(), "rule__Navegar__Group_4__0");
			builder.put(grammarAccess.getNavegarAccess().getGroup_4_3(), "rule__Navegar__Group_4_3__0");
			builder.put(grammarAccess.getMostrarAccess().getGroup(), "rule__Mostrar__Group__0");
			builder.put(grammarAccess.getCerrarAccess().getGroup(), "rule__Cerrar__Group__0");
			builder.put(grammarAccess.getWizardAccess().getTituloAssignment_1(), "rule__Wizard__TituloAssignment_1");
			builder.put(grammarAccess.getWizardAccess().getPaginasAssignment_3(), "rule__Wizard__PaginasAssignment_3");
			builder.put(grammarAccess.getWizardAccess().getPaginasAssignment_4(), "rule__Wizard__PaginasAssignment_4");
			builder.put(grammarAccess.getPaginaAccess().getInicialAssignment_1_0_0(), "rule__Pagina__InicialAssignment_1_0_0");
			builder.put(grammarAccess.getPaginaAccess().getNameAssignment_1_0_1(), "rule__Pagina__NameAssignment_1_0_1");
			builder.put(grammarAccess.getPaginaAccess().getNameAssignment_1_1(), "rule__Pagina__NameAssignment_1_1");
			builder.put(grammarAccess.getPaginaAccess().getCamposAssignment_3_0_0(), "rule__Pagina__CamposAssignment_3_0_0");
			builder.put(grammarAccess.getPaginaAccess().getCamposAssignment_3_0_1(), "rule__Pagina__CamposAssignment_3_0_1");
			builder.put(grammarAccess.getPaginaAccess().getCasillasAssignment_3_1_0(), "rule__Pagina__CasillasAssignment_3_1_0");
			builder.put(grammarAccess.getPaginaAccess().getCasillasAssignment_3_1_1(), "rule__Pagina__CasillasAssignment_3_1_1");
			builder.put(grammarAccess.getPaginaAccess().getBotonesAssignment_3_2(), "rule__Pagina__BotonesAssignment_3_2");
			builder.put(grammarAccess.getPaginaAccess().getBotonesAssignment_3_3(), "rule__Pagina__BotonesAssignment_3_3");
			builder.put(grammarAccess.getCampoAccess().getObligatorioAssignment_1(), "rule__Campo__ObligatorioAssignment_1");
			builder.put(grammarAccess.getCampoAccess().getEtiquetaAssignment_3(), "rule__Campo__EtiquetaAssignment_3");
			builder.put(grammarAccess.getCasillaAccess().getSeleccionadoAssignment_1(), "rule__Casilla__SeleccionadoAssignment_1");
			builder.put(grammarAccess.getCasillaAccess().getNameAssignment_2(), "rule__Casilla__NameAssignment_2");
			builder.put(grammarAccess.getCasillaAccess().getEtiquetaAssignment_4(), "rule__Casilla__EtiquetaAssignment_4");
			builder.put(grammarAccess.getCasillaAccess().getNuevoDestinoAssignment_5_1(), "rule__Casilla__NuevoDestinoAssignment_5_1");
			builder.put(grammarAccess.getNavegarAccess().getEtiquetaAssignment_2(), "rule__Navegar__EtiquetaAssignment_2");
			builder.put(grammarAccess.getNavegarAccess().getDestinoAssignment_3(), "rule__Navegar__DestinoAssignment_3");
			builder.put(grammarAccess.getNavegarAccess().getCasillasAssignment_4_2(), "rule__Navegar__CasillasAssignment_4_2");
			builder.put(grammarAccess.getNavegarAccess().getCasillasAssignment_4_3_1(), "rule__Navegar__CasillasAssignment_4_3_1");
			builder.put(grammarAccess.getMostrarAccess().getEtiquetaAssignment_1(), "rule__Mostrar__EtiquetaAssignment_1");
			builder.put(grammarAccess.getMostrarAccess().getMensajeAssignment_3(), "rule__Mostrar__MensajeAssignment_3");
			builder.put(grammarAccess.getCerrarAccess().getEtiquetaAssignment_1(), "rule__Cerrar__EtiquetaAssignment_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private WizardGrammarAccess grammarAccess;

	@Override
	protected InternalWizardParser createParser() {
		InternalWizardParser result = new InternalWizardParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public WizardGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(WizardGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
